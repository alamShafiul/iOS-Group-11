struct Stack<T> {
    var items: [T] = []

    mutating func push(_ item: T) {
        items.append(item)
    }
    mutating func pop() -> T {
        return items.removeLast()
    }
    mutating func top() -> T {
        return items[items.count-1]
    }
  
}

var stk = Stack<Int>()

stk.push(1)
stk.push(2)
stk.push(3)
stk.push(4)
stk.push(5)
stk.push(10)
stk.pop()
for item in stk.items {
    print("\(item)", terminator: " ")
}
print()

//New code added by Shahnewaz

# Bubble sort in Python

def bubbleSort(array):
    
  # loop to access each array element
  for i in range(len(array)):

    # loop to compare array elements
    for j in range(0, len(array) - i - 1):

      # compare two adjacent elements
      # change > to < to sort in descending order
      if array[j] > array[j + 1]:

        # swapping elements if elements
        # are not in the intended order
        temp = array[j]
        array[j] = array[j+1]
        array[j+1] = temp


data = [-20, 450, 0, 111, -19]

bubbleSort(data)

print('Sorted Array in Ascending Order:')
print(data)

